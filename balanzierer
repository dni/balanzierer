#!/bin/sh
dir="/home/dni/.lightning"
datadir="$dir/regtest/data"
node_list="1 2 3 4 5 6"
nodes=6

bcli() {
  docker exec balanzierer-bitcoind-1 bitcoin-cli -rpcuser=balanzierer -rpcpassword=balanzierer -regtest $@
}

lcli() {
  # args(i, cmd)
  i=$1
  shift # shift first argument so $@
  echo "running cmd: $@ on node: $i"
  docker exec balanzierer-clightning-$i lightning-cli --network regtest $@
}

lcli_all () {
  for i in $node_list; do
    lcli $i $1
  done
}

docker_start() {
  docker-compose up --scale clightning=$nodes -d
}

init() {
  init_bitcoin_wallet
  sleep 3
  fund_lightning_wallets
  sleep 2
}

init_bitcoin_wallet() {
  echo "init_bitcoin_wallet..."
  bcli createwallet balanzierer || bcli loadwallet balanzierer
  bcli -generate 150
}

fund_lightning_wallets() {
  echo "fund_lightning_wallets..."
  for i in $node_list; do
    address=$(lcli $i newaddr | jq -r .bech32)
    echo "funding wallet: $address on node: $i"
    bcli -named sendtoaddress address=$address amount=10 fee_rate=100
  done
  bcli -generate 1
}

show_topology() {
  echo "create_channels..."
  cat <<EOF
Channel topology
1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 1
1 -> 3 -> 5 -> 1
2 -> 4 -> 6 -> 2
     _____________
+->[1]---->[2]    |
|  /^  ___/^| \   |
| / __/     |  v  |
|[6]<_      | [3]<+
| ^\  \____ |  /|
|   \      \v v |
+--[5]<----[4]  |
    ^-----------+
EOF
}

triangle1="1 3 5"
triangle2="2 4 6"

create_channels() {
  echo "create_channels..."
  peer1=$(lcli 1 getinto)
  bcli -generate 1
}

connect_peers() {
  echo "connecting peers..."
  for i in $node_list; do
    for j in $node_list; do
      if [ "$i" == "$j" ]; then
        continue
      fi
      peer_id=$(lcli $j getinfo | jq -r .id)
      echo "connecting node: $i to peer: $peer_id"
      lcli $i connect $peer_id
    done
  done
}

balance() {
 run_all
}

unbalance() {
 run_all
}

force_close() {
 run_all
}

$@
